  def bumpTypes = ["PATCH", "MINOR", "MAJOR"]
private def getVersionNumber(property){
    Properties props = new Properties()
    props.load(new FileInputStream("app/version.properties"))
    def number = Integer.parseInt(props.getProperty(property))
    if (number == null){
        return 1
    }
    return number
}
def getMajorVersionNumber(){
    return getVersionNumber("MAJOR")
}
def getMinorVersionNumber(){
    return getVersionNumber("MINOR")
}
def getPatchVersionNumber(){
    return getVersionNumber("PATCH")
}
def getBuildNumber(){
    return getVersionNumber("AI_VERSION_CODE")
}
def getVersionNameString(){
    return "${getMajorVersionNumber()}.${getMinorVersionNumber()}.${getPatchVersionNumber()}"
}
task printVersionNumber(){
    print(getVersionNameString())
}
task renameApk(){

    file('build/outputs/apk/app-staging-release.apk').renameTo("app/build/outputs/apk/shakn-${getVersionNameString()}.${getBuildNumber()}.apk")
}
def incrementVersion(bumpType){

        def currentBumpType = bumpType

        Properties props = new Properties()
        props.load(new FileInputStream("app/version.properties"))
        def major = props.getProperty("MAJOR")
        def minor = props.getProperty("MINOR")
        def patch = props.getProperty("PATCH")
        def majorInt = Integer.parseInt(major)
        def minorInt = Integer.parseInt(minor)
        def patchInt = Integer.parseInt(patch)

        switch (currentBumpType) {
            case "MAJOR":
                majorInt = majorInt + 1
                minorInt = 0
                patchInt = 0
                break
            case "MINOR":
                minorInt = minorInt + 1
                patchInt = 0
                break
            case "PATCH":
                patchInt = patchInt + 1
                break
            default: break
        }
        props.setProperty("MAJOR", String.valueOf(majorInt))
        props.setProperty("MINOR", String.valueOf(minorInt))
        props.setProperty("PATCH", String.valueOf(patchInt))
        println(majorInt)
        println(minorInt)
        println(patchInt)
        def writer = new FileWriter(file('version.properties'))
        try {
            props.store(writer, '')
            writer.flush()
        } finally {
            writer.close()
        }
    println("MAJOR ${getMajorVersionNumber()}")
    println("MINOR ${getMinorVersionNumber()}")
    println("PATCH ${getPatchVersionNumber()}")

}
